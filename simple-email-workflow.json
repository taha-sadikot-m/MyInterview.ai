{
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "working-email-workflow"
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "send-email",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "id": "webhook-start",
      "name": "Email Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [100, 300],
      "webhookId": "email-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "validate-to",
              "leftValue": "={{ $json.to }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty"
              }
            },
            {
              "id": "validate-subject", 
              "leftValue": "={{ $json.subject }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty"
              }
            },
            {
              "id": "validate-body",
              "leftValue": "={{ $json.body }}",
              "rightValue": "",
              "operator": {
                "type": "string", 
                "operation": "isNotEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "validate-input",
      "name": "Validate Input",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [300, 300]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "smtp",
        "fromEmail": "{{ $json.from || 'noreply@voicevanguardvault.com' }}",
        "toEmail": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "emailType": "html",
        "message": "={{ $json.body }}",
        "options": {}
      },
      "id": "send-email-smtp",
      "name": "Send Email",
      "type": "n8n-nodes-base.smtp",
      "typeVersion": 1,
      "position": [500, 200],
      "credentials": {
        "smtp": {
          "id": "smtp-credentials",
          "name": "SMTP Credentials"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "success-flag",
              "name": "success",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "message-text",
              "name": "message", 
              "value": "Email sent successfully",
              "type": "string"
            },
            {
              "id": "message-id",
              "name": "messageId",
              "value": "={{ $json.messageId || 'smtp-' + $now }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "format-success",
      "name": "Format Success Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [700, 200]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "error-flag",
              "name": "success",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "error-message",
              "name": "error",
              "value": "Missing required fields: to, subject, and body are required",
              "type": "string"
            },
            {
              "id": "error-code",
              "name": "errorCode",
              "value": "VALIDATION_ERROR",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "format-error",
      "name": "Format Error Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [500, 400]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "smtp-error-flag",
              "name": "success",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "smtp-error-message",
              "name": "error",
              "value": "={{ $json.error || 'Failed to send email via SMTP' }}",
              "type": "string"
            },
            {
              "id": "smtp-error-code",
              "name": "errorCode",
              "value": "SMTP_ERROR",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "format-smtp-error",
      "name": "Format SMTP Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [700, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify($json) }}",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods", 
                "value": "POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type, Authorization"
              }
            ]
          }
        }
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Email Webhook": {
      "main": [
        [
          {
            "node": "Validate Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Input": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "main": [
        [
          {
            "node": "Format Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "error": [
        [
          {
            "node": "Format SMTP Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Success Response": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Error Response": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format SMTP Error": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {}
}